<launch>

<arg name="model" default="$(find pompeyo)/urdf/pompeyo6.xacro"/>
<arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz"/>
<param name="robot_description" textfile="$(arg model)" />

<node name="rviz" pkg="rviz" type="rviz" args="-d $(find pompeyo)/urdf/urdf.rviz -f base_link"/>

<!-- Load joint controller configuration from YAML file to parameter server -->

<rosparam file="$(find diff_drive)/config/joint_states.yaml" command="load"/>

<rosparam file="$(find diff_drive)/config/diff_drive.yaml" command="load"/>

<node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" ></node>

<!-- load the controllers -->
<node name="robot_arm_controller_spawner" pkg="controller_manager" type="spawner"
  respawn="true" output="screen" 
   args="/Diff_Drive/joint_state_controller
         /Diff_Drive/diff_drive_controller
        --shutdown-timeout 3"/>

<!-- convert joint states to TF transforms for rviz, etc -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

<node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
  <param name="default_topic" value="/Diff_Drive/diff_drive_controller/cmd_vel"/> 
</node>


  <arg name="razor_config_file" default="$(find razor_imu_9dof)/config/my_razor.yaml"/>
  <node pkg="razor_imu_9dof" type="imu_node.py" name="imu_node" output="screen">
    <rosparam file="$(arg razor_config_file)" command="load"/>
  </node>
 
  <arg name="port" default="/dev/ttyS0" />
  <arg name="baud" default="9600" />
  <arg name="frame_id" default="gps" />
  <arg name="use_GNSS_time" default="False" />
  <arg name="time_ref_source" default="gps" />
  <arg name="useRMC" default="False" />

  <node name="nmea_serial_driver_node" pkg="nmea_navsat_driver" type="nmea_serial_driver" output="screen">
    <param name="port" value="$(arg port)"/>
    <param name="baud" value="$(arg baud)" />
    <param name="frame_id" value="$(arg frame_id)" />
    <param name="use_GNSS_time" value="$(arg use_GNSS_time)" />
    <param name="time_ref_source" value="$(arg time_ref_source)" />
    <param name="useRMC" value="$(arg useRMC)" />
  </node>



    <arg name="svo_file"             default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <arg name="stream"               default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

    <arg name="node_name"            default="zed_node" />
    <arg name="camera_model"         default="zed" /> <!-- 'zed' or 'zedm' -->
    <arg name="publish_urdf"         default="true" />

    <arg name="camera_name"          default="zed" />

    <arg name="base_frame"           default="base_link" />

    <arg name="cam_pos_x"             default="0.2" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_y"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_z"             default="0.16" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_pitch"             default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_yaw"               default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->

    <group ns="$(arg camera_name)">
        <include file="$(find zed_wrapper)/launch/include/zed_camera.launch.xml">
            <arg name="camera_name"         value="$(arg camera_name)" />
            <arg name="svo_file"            value="$(arg svo_file)" />
            <arg name="stream"              value="$(arg stream)" />
            <arg name="node_name"           value="$(arg node_name)" />
            <arg name="camera_model"        value="$(arg camera_model)" />
            <arg name="base_frame"          value="$(arg base_frame)" />
            <arg name="publish_urdf"        value="$(arg publish_urdf)" />
            <arg name="cam_pos_x"           value="$(arg cam_pos_x)" />
            <arg name="cam_pos_y"           value="$(arg cam_pos_y)" />
            <arg name="cam_pos_z"           value="$(arg cam_pos_z)" />
            <arg name="cam_roll"            value="$(arg cam_roll)" />
            <arg name="cam_pitch"           value="$(arg cam_pitch)" />
            <arg name="cam_yaw"             value="$(arg cam_yaw)" />
        </include>
    </group>


  <param name="imu0" value="imu"/>
  <param name="odom0" value="zed/zed_node/odom"/>

  <rosparam command="load" file="$(find robot_localization)/params/dual_ekf_navsat_example.yaml" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true">

  </node>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true">
    <remap from="odometry/filtered" to="/zed/zed_node/odom"/>
    <remap from="imu/data" to="imu"/>
  </node>

  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true">
    <remap from="odometry/filtered" to="zed/zed_node/odom"/>
    <remap from="imu/data" to="imu"/>
    <remap from="gps/fix" to="gps"/>
  </node>


</launch>

 


